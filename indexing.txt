
-->Indexing topic
 
 -agar me koi json file me name ko Indexing use karata hu to uska
  alag se data structure me sorting hogi.

 -useme lagati hai binary search tree searching.

 -Indexes are stored in B-tree data structure.

 -It stores 
    1>Index keys
    2>Pointers to the documents in the collection

 -When a query is executed,Mongodb can use the index to quickly locate the documents that match the query by searching
  through the B-tree.

 -The trade-off
  -storage space more not every field get the Indexing.
  -Write performance
 
 -There are 3 types of indexing.
  1>Single field indexing
  2>compound indexing
  3>Text indexes 


 db.data1.find({age:{$lte:30}}).explain("executionStats")//without indexing more time fetch and giveing the indexing less time to cover seraching.


  //create index on age field
  db.data1.createIndex({"age":1})

  //One field remove at a time
  db.data1.dropIndex("age_1")

  //Fetch all the indexing returns
  db.data1.getIndexes()

 -->When not to use indexing in Mongodb?

 -when the collection is small
 -when the collection is frequntly updated
 -when the queries are complex(multiple fields)
 -when the collection is large(makes less indices)

 -->Compound Index

 db.data1.createIndex({age:1,gender:1})
 db.data1.find({age:{$gte:27},gender:"male"}).explain("executionStats") //this give indexing
 db.data1.find({gender:"male"}).explain("executionStats")//this give collspan
